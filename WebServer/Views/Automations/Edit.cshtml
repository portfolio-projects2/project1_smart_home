@model WebServer.Models.Automation

@{
    ViewData["Title"] = "Edit";
    List<EnergySourceDevice> energySources = ViewBag.energySources;
}

<h1>Edit</h1>

<h4>Automation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label >Automation Status</label>
                <select asp-for="active" >
                    <option value="1">Active</option>
                    <option value="0">Inctive</option>

                </select>
                <span asp-validation-for="active" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="automationTitle" class="control-label"></label>
                <input asp-for="automationTitle" class="form-control" />
                <span asp-validation-for="automationTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="automationTimeRange" class="control-label"></label>
                <input type="hidden" asp-for="automationTimeRange" id="time" class="form-control" />
                <br />
               From :  <input type="datetime-local" id="autStart"/>
               <br />
              to :<input style="margin-left: 26px;" type="datetime-local" id="autOff"/>
            </div>
            <div class="form-group">
                <label  class="control-label">Energy Source</label>
                <select asp-for="energySourceDeviceId" class="form-control" >

                    @foreach(var e in energySources)
                    {
                        
                        <option value= '@e.Id' > @e.title</option>
                    }
            
            </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" id="submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>

document.getElementById("submit").addEventListener("click",function(e){
var startDate = new Date(document.getElementById("autStart").value)
var offDate = new Date(document.getElementById("autOff").value)

    if(timeRangeValid(startDate,offDate)&&format(startDate)!="undifined"&&format(offDate)!="undifined"){
        document.getElementById("time").setAttribute("value","{\"start\":\""+format(startDate)+"\","+"\"off\":\""+format(offDate)+"\"}")


    }else{
        alert("Time range is not valid")
        e.preventDefault();
    }

})


function format(dateTime) {
    var d = new Date(dateTime),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear(),
        hour=d.getHours(),
        minutes=d.getMinutes();

    if (month.length < 2) 
        month = '0' + month;
    if (day.length < 2) 
        day = '0' + day;
    if(`${hour}`.length<2)    
        hour='0'+hour;
    if(`${minutes}`.length<2)
        minutes='0'+minutes;    
    return [day,month,year,hour,minutes].join('-');
}



  function timeRangeValid(startDate,offDate){
    //  var dateStrA = "28/12/2013 16:20:22".replace( /(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3");

      if(startDate<offDate){
        return true
      }else{return false}

      
  }

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
