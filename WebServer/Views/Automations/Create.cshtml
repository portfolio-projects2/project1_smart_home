@using Newtonsoft.Json.Linq
@using System.Diagnostics
@model WebServer.Models.Automation

@{
    ProjectDbContext _context = ViewBag.context;
    ViewData["Title"] = "Create";
}

@{
    List<Device> devices = _context.Device.ToList();
    List<Sensor> sensors = _context.Sensor.ToList();
    List<Room> rooms = _context.Room.ToList();
    List<EnergySourceDevice> energySources = _context.EnergySourceDevice.ToList();
    var counter = 0;
}

<style>
    ul h6 {
        font-size: 20px;
        color: #756a6a;
    }

    ul li input {
        font-size: 15px;
        margin-right: 10px;
    }

    .check {
        margin-left: 10px;
        margin-bottom: 20px;
    }

    .selectTime {
        border: none;
    }
</style>

<h1>Add new automation process</h1>

<p>
    Here you can create a new automation process and add rooms, devices, and sensors to it by choosing from the list below.
    <br />
    You can also set the time conditions for the chosen devices at this automation process.
</p>

<div>
    <div>
        <label style="font-weight:600; margin-bottom:20px">Automation title</label>
        <input type="text" id="automationTitle" />
    </div>

    <div>
        <label style="font-weight:600; margin-bottom:20px">Select Energy Source</label>
        <select id="energySourceSelect">
            @foreach (var es in energySources)
            {
                <option value="@es.Id">@es.title</option>
            }
        </select>
    </div>

    <label style="font-weight:600;">Automation status</label>
    <select id="activeSelect">
        <option>active</option>
        <option>not active</option>
    </select>

    <br />

    <div>
        <label style="font-weight:600; margin-bottom:20px">Automation Time Range: from</label>
        <input type="datetime-local" id="autStart" />
        to
        <input type="datetime-local" id="autOff" />
    </div>

    <div>
        <h4>Rooms</h4>
        <ul>
            @foreach (var room in rooms)
            {
                <li>
                    <h5 style="color: #464646;font-family: cursive;"> @room.roomTitle </h5>
                    <ul>
                        <h6>Sensors</h6>
                        @foreach (var sensor in sensors)
                        {
                            if (sensor.roomId == room.Id)
                            {
                                counter++;
                                <li class="sensorLi">
                                    <div>
                                        @sensor.sensorName
                                        <input class="check" room='@room.Id' sensor='@sensor.Id' type="checkbox" id="checkSensor@counter" />
                                    </div>
                                </li>
                            }
                        }
                    </ul>

                    <ul>
                        <h6>Devices</h6>
                        @foreach (var device in devices)
                        {
                            if (device.roomId == room.Id)
                            {
                                counter++;
                                <li class="deviceLi">
                                    <div>
                                        @device.deviceName
                                        <input type="checkbox" class="check" room='@room.Id' device='@device.Id' id="check_@device.Id" />
                                    </div>
                                    <div class="div_@device.Id" style="display:none"></div>
                                </li>
                            }
                        }
                    </ul>
                </li>
            }
        </ul>
    </div>

    <button onclick="saveConfig()">Add automation parameters</button>
</div>

<script>
    (function () {
        if (@rooms.Count() == 0 || @devices.Count() == 0) {
            alert("You need to add at least one room and one device to add an automation process");
            window.location.href = "./";
        }
    })();

    var autObject = {};

    function saveConfig() {
        var startTimeMap = new Map();
        var offTimeMap = new Map();
        var devicesList = [];
        var sensorsList = [];
        var sensorsLiList = document.getElementsByClassName("sensorLi");
        var devicesLiList = document.getElementsByClassName("deviceLi");

        // Collect checked sensors
        for (var i = 0; i < sensorsLiList.length; i++) {
            if (sensorsLiList[i].childNodes[1].childNodes[1].checked) {
                var sensorId = sensorsLiList[i].childNodes[1].childNodes[1].getAttribute('sensor');
                sensorsList.push(sensorId);
            }
        }

        // Collect checked devices
        for (var i = 0; i < devicesLiList.length; i++) {
            if (devicesLiList[i].childNodes[1].childNodes[1].checked) {
                var deviceId = devicesLiList[i].childNodes[1].childNodes[1].getAttribute('device');
                devicesList.push(deviceId);
            }
        }

        // Set time range
        var startDate = new Date(document.getElementById("autStart").value);
        var offDate = new Date(document.getElementById("autOff").value);
        autObject["automationTimeRange"] = JSON.parse(
            "{\"start\":\"" + format(startDate) + "\",\"off\":\"" + format(offDate) + "\"}"
        );

        // Set sensors and devices
        autObject["sensors"] = sensorsList;
        autObject["devices"] = devicesList;
        autObject["energySource"] = document.getElementById("energySourceSelect").value;
        autObject['automationTitle'] = document.getElementById('automationTitle').value;

        // Set automation state
        if (document.getElementById('activeSelect').value == "active") {
            autObject['automationState'] = '1';
        } else {
            autObject['automationState'] = '0';
        }

        // Validate before sending data
        if (devicesList.length == 0 || sensorsList.length == 0) {
            alert("You need to choose at least one device and one sensor to add an automation process");
        } else if (autObject['automationTitle'] == "") {
            alert("Automation Title cannot be empty");
        } else if (!timeRangeValid(startDate, offDate)) {
            alert("Time range is not valid");
        } else {
            $.ajax({
                url: "./create",
                method: "POST",
                async: false,
                contentType: "application/Json",
                data: JSON.stringify(autObject),
                success: function (response) {
                    window.location.href = response.url;
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            });
        }
    }

    function timeRangeValid(startDate, offDate) {
        return startDate < offDate;
    }

    function format(dateTime) {
        var d = new Date(dateTime),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear(),
            hour = d.getHours(),
            minutes = d.getMinutes();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;
        if (hour.toString().length < 2) hour = '0' + hour;
        if (minutes.toString().length < 2) minutes = '0' + minutes;

        return [day, month, year, hour, minutes].join('-');
    }
</script>
